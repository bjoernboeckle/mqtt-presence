name: Create Release and Publish to PyPI

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write  # erforderlich für Upload zu GitHub Releases

jobs:
  release:
    name: 🛠️ Build & Release
    runs-on: windows-latest

    steps:
      - name: ✨ Checkout code
        uses: actions/checkout@v4

      - name: ⚖️ Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📥 Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry toml pathlib

      - name: 📝 Update pyproject.toml version from tag
        run: python scripts/update_version.py ${{ github.ref_name }}

      - name: 🕒 Run pre-build script
        run:  python scripts/pre_build.py

      - name: 📦 Install dependencies (incl. build + pyinstaller)
        run: |
          poetry self add poetry-plugin-export
          poetry install --with dev
          poetry run pip install pyinstaller

      - name: 🧪 Run tests (if available)
        run: poetry run pytest tests

      - name: 🧠 Lint code
        run: poetry run pylint mqtt_presence

      - name: 🛠️ Build package
        run: poetry build

      - name: 🏗️ Build .exe with PyInstaller
        run: |
          poetry run pyinstaller mqtt-presence.spec

      - name: Rename executable with version
        run: |
          $tag = "${{ github.ref_name }}"
          Rename-Item -Path "dist/mqtt-presence.exe" -NewName "mqtt-presence-$tag.exe"

      - name: 💾 Upload artifacts to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/mqtt-presence-${{ github.ref_name }}.exe
            dist/*.whl
            dist/*.tar.gz

      - name: 🚀 Publish to PyPI via Poetry
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry publish --no-interaction


