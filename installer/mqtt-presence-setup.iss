; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "mqtt-presence"
#define MyAppVersion "0.2.5"
#define MyAppPublisher "Bjoern Boeckle"
#define MyAppURL "https://github.com/bjoernboeckle/mqtt-presence"
#define MyAppExeName "mqtt-presence.exe"

[Setup]
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
DefaultDirName={commonappdata}\{#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}
DisableDirPage=yes
Uninstallable=yes
OutputBaseFilename={#MyAppName}-setup
Compression=lzma
SolidCompression=yes
LicenseFile=..\LICENSE
OutputDir=..\dist

[Files]
Source: "../dist/{#MyAppExeName}"; DestDir: "{commonappdata}\{#MyAppName}"; Flags: ignoreversion
Source: "tools/nssm.exe"; DestDir: "{commonappdata}\{#MyAppName}"; Flags: ignoreversion

[Run]
Filename: "{commonappdata}\{#MyAppName}\nssm.exe"; \
  Parameters: "stop {#MyAppName}"; Flags: runhidden skipifdoesntexist

Filename: "{commonappdata}\{#MyAppName}\nssm.exe"; \
  Parameters: "remove {#MyAppName} confirm"; Flags: runhidden skipifdoesntexist

Filename: "{commonappdata}\{#MyAppName}\nssm.exe"; \
  Parameters: "install {#MyAppName} ""{commonappdata}\{#MyAppName}\{#MyAppExeName}"" --config ""{commonappdata}\{#MyAppName}\config"" --log ""{commonappdata}\{#MyAppName}\log"""; \
  StatusMsg: "Registriere Windows-Dienst..."; Flags: runhidden

Filename: "{commonappdata}\{#MyAppName}\nssm.exe"; \
  Parameters: "set {#MyAppName} AppStdout ""{commonappdata}\{#MyAppName}\stdout.log"""; \
  Flags: runhidden

Filename: "{commonappdata}\{#MyAppName}\nssm.exe"; \
  Parameters: "set {#MyAppName} AppStderr ""{commonappdata}\{#MyAppName}\stderr.log"""; \
  Flags: runhidden

Filename: "{commonappdata}\{#MyAppName}\nssm.exe"; \
  Parameters: "set {#MyAppName} AppRotateFiles 1"; \
  Flags: runhidden

Filename: "{commonappdata}\{#MyAppName}\nssm.exe"; \
  Parameters: "start {#MyAppName}"; \
  StatusMsg: "Starte Windows-Dienst..."; Flags: runhidden

[UninstallRun]
Filename: "{commonappdata}\{#MyAppName}\nssm.exe"; \
  Parameters: "stop {#MyAppName}"; Flags: runhidden; RunOnceId: stopService

Filename: "{commonappdata}\{#MyAppName}\nssm.exe"; \
  Parameters: "remove {#MyAppName} confirm"; Flags: runhidden; RunOnceId: stopService

[Code]
procedure DeleteProgramDataFolder;
var
  Dir: string;
begin
  Dir := ExpandConstant('{commonappdata}\{#MyAppName}');
  DelTree(Dir, True, True, True);
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
  if CurUninstallStep = usPostUninstall then
    DeleteProgramDataFolder;
end;

